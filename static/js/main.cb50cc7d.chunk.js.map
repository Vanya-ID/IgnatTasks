{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","m","message","messageImg","src","avatar","alt","angle","ourMessage","name","text","time","messageData","HW1","Affair","affairPriority","color","affair","priority","a","affairDiv","affairName","style","deleteBtn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","affairs","btn","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","g","div","border","value","onChange","input","fontSize","GreetingContainer","users","addUserCallback","setName","setError","length","e","trimedName","currentTarget","trim","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cb50cc7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__2Aqb0\",\"deleteBtn\":\"Affairs_deleteBtn__JsC7t\",\"btn\":\"Affairs_btn__1-Fcy\",\"affairDiv\":\"Affairs_affairDiv__1V9RW\",\"affairName\":\"Affairs_affairName__qL7oz\",\"affairPriority\":\"Affairs_affairPriority__1i77q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3uwl0\",\"messageImg\":\"Message_messageImg__2Ed-d\",\"ourMessage\":\"Message_ourMessage__2-KeT\",\"name\":\"Message_name__2jJ7w\",\"text\":\"Message_text__39xVd\",\"time\":\"Message_time__1FFWJ\",\"angle\":\"Message_angle__m__3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Greeting_div__BkRoV\",\"input\":\"Greeting_input__3OZb_\",\"btn\":\"Greeting_btn__28Luh\",\"error\":\"Greeting_error__2G7gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__skMEb\",\"errorInput\":\"SuperInputText_errorInput__1ZGaS\",\"error\":\"SuperInputText_error__1-HcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3dyqE\",\"column\":\"HW4_column__2JuFR\",\"testSpanError\":\"HW4_testSpanError__9UKp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1tBfQ\",\"red\":\"SuperButton_red__1anNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__24QcW\",\"spanClassName\":\"SuperCheckbox_spanClassName__p5MRw\"};","import React from 'react'\nimport m from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n\n    return (\n        <div className={m.message}>\n            <img className={m.messageImg} src={props.avatar} alt=\"\"/>\n\n            <div className={m.angle} />\n            <div className={m.ourMessage}>\n                <div className={m.name}>\n                    {props.name}\n                </div>\n                <div className={m.text}>{props.message} </div>\n                <div className={m.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/batman_hero_avatar_comics-512.png',\n    name: 'Some Name ',\n    message: 'some text  ',\n    time: '22:00',\n}\n\n\n\nfunction HW1() {\n    return (\n        <div >\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n         {/*   для личного творчества, могу проверить\n            <AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport a from  './Affairs.module.css'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (id : number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id) }\n    const serColor = ()=>{\n        if (props.affair.priority === 'high') return \"red\"\n        if (props.affair.priority === 'middle') return \"yellow\"\n        if (props.affair.priority === 'low') return \"green\"\n\n    }\n    const  affairPriority = {\n        color:serColor()\n    }\n    return (\n        <div className={a.affairDiv}>\n                <div className={a.affairName}>{props.affair.name}</div>\n                <div style={affairPriority}>  { '{ ' +props.affair.priority + ' }'} </div>\n\n            <button className={a.deleteBtn} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport a from  './Affairs.module.css'\n\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter : FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low') }\n\n    return (\n        <div className={a.affairs}>\n            {mappedAffairs}\n\n            <button className={a.btn} onClick={setAll}>All</button>\n            <button  className={a.btn} onClick={setHigh}>High</button>\n            <button   className={a.btn} onClick={setMiddle}>Middle</button>\n            <button   className={a.btn} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n\n\n    if (filter === 'low') return affairs.filter(a => a.priority === \"low\")\n    else if (filter === 'middle') return affairs.filter(a => a.priority === \"middle\")\n    else if (filter === 'high') return affairs.filter(a => a.priority === \"high\")\n    else {\n        return affairs\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n   return  affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport g from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: boolean\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    // need to fix with (?:)\n\n    return (\n        <div>\n            <div className={g.div}>\n                <input style={{border: error ? '1px solid red' : \"1px solid #695e5e\"}} value={name}\n                       onChange={setNameCallback} className={g.input}/>\n                <button className={g.btn} onClick={addUser}>add</button>\n                <span style={{color: \"white\", fontSize: \"20px\"}}>{totalUsers}</span>\n            </div>\n            <div className={g.error} style={{color: \"red\"}}>{error ? 'name is required' : null}</div>\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState, ChangeEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string)=> void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<boolean>(false)\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    const trimedName = e.currentTarget.value.trim();\n        setName(trimedName)\n        setError(false)\n    }\n    const addUser = () => {\n        if (name){\n            addUserCallback(name)\n            alert('Привет '+ name + ' !')\n            setError(false)\n            setName('')\n        } else{\n            setName('')\n            setError(true)\n        }\n\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user:UserType = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([...users, user])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChange && onChange(e)\n        onChangeChecked  && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div >react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}